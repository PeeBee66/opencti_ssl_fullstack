services:
  redis:
    image: redis:8.2.1
    restart: always
    volumes:
      - redisdata:/data
      - /home/opencti-admin/OpenCTI_SSL_STACK/ssl/redis:/tls:ro
    ports:
      - "6380:6380"
    command: redis-server --port 0 --tls-port 6380 --tls-cert-file /tls/redis.crt --tls-key-file /tls/redis.key --tls-ca-cert-file /tls/ca.crt --tls-auth-clients no
    healthcheck:
      test: ["CMD", "redis-cli", "--tls", "--cert", "/tls/redis.crt", "--key", "/tls/redis.key", "--cacert", "/tls/ca.crt", "-p", "6380", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - opencti

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.3
    container_name: elasticsearch
    restart: always
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.ml.enabled=false
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certs/elasticsearch.key
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certs/elasticsearch.crt
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certs/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certs/elasticsearch.key
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certs/elasticsearch.crt
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certs/ca.crt
     # - thread_pool.search.queue_size=5000
     #- logger.org.elasticsearch.discovery="ERROR"
      - "ES_JAVA_OPTS=-Xms${ELASTIC_MEMORY_SIZE} -Xmx${ELASTIC_MEMORY_SIZE}"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - /home/opencti-admin/OpenCTI_SSL_STACK/ssl/elasticsearch:/usr/share/elasticsearch/config/certs:ro
    networks:
      - opencti

      
  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001" --certs-dir /root/.minio/certs
    volumes:
      - s3data:/data
      - /home/opencti-admin/OpenCTI_SSL_STACK/ssl/minio:/root/.minio/certs:ro
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - opencti

  rabbitmq:
    image: rabbitmq:4.1-management
    restart: always
    ports:
      - "5671:5671"
      - "15671:15671"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_NODENAME=rabbit01@localhost
    volumes:
      - type: bind
        source: /home/opencti-admin/OpenCTI_SSL_STACK/config/rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf
      - amqpdata:/var/lib/rabbitmq
      - /home/opencti-admin/OpenCTI_SSL_STACK/ssl/rabbitmq:/etc/ssl/certs:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - opencti

  opencti:
    image: opencti/platform:6.7.17
    restart: always
    ports:
      - "8080:8080"
    environment:
      - NODE_OPTIONS=--max-old-space-size=8096
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - APP__PORT=8080
      - APP__BASE_URL=${OPENCTI_BASE_URL}
      - APP__ADMIN__EMAIL=${OPENCTI_ADMIN_EMAIL}
      - APP__ADMIN__PASSWORD=${OPENCTI_ADMIN_PASSWORD}
      - APP__ADMIN__TOKEN=${OPENCTI_ADMIN_TOKEN}
      - APP__APP_LOGS__LOGS_LEVEL=info
      - APP__SESSION_TIMEOUT=1200000
      - APP__HTTPS_CERT__KEY=/opt/opencti/ssl/opencti.key
      - APP__HTTPS_CERT__CRT=/opt/opencti/ssl/opencti.crt
      - APP__HTTPS_CERT__CA=["/opt/opencti/ssl/ca.crt"]
      - APP__HTTPS_CERT__REJECT_UNAUTHORIZED=false
      - APP__HEALTH_ACCESS_KEY=${OPENCTI_HEALTHCHECK_ACCESS_KEY}
      - REDIS__HOSTNAME=redis
      - REDIS__PORT=6380
      - REDIS__MODE=single
      - REDIS__DATABASE=0
      - REDIS__USE_SSL=true
      - REDIS__CA=["/opt/opencti/ssl/ca.crt"]
      - REDIS__CERT=/opt/opencti/ssl/opencti.crt
      - REDIS__KEY=/opt/opencti/ssl/opencti.key
      - REDIS__REJECT_UNAUTHORIZED=false
      - REDIS__TLS_SERVERNAME=redis
      - ELASTICSEARCH__URL=https://elasticsearch:9200
      - ELASTICSEARCH__USERNAME=elastic
      - ELASTICSEARCH__PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH__NUMBER_OF_REPLICAS=0
      - ELASTICSEARCH__SSL__CA=/opt/opencti/ssl/ca.crt
      - ELASTICSEARCH__SSL__CERT=/opt/opencti/ssl/opencti.crt
      - ELASTICSEARCH__SSL__KEY=/opt/opencti/ssl/opencti.key
      - ELASTICSEARCH__SSL__REJECT_UNAUTHORIZED=false
      - MINIO__ENDPOINT=minio
      - MINIO__PORT=9000
      - MINIO__USE_SSL=true
      - MINIO__ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO__SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO__REJECT_UNAUTHORIZED=false
      - RABBITMQ__HOSTNAME=rabbitmq
      - RABBITMQ__PORT=5671
      - RABBITMQ__PORT_MANAGEMENT=15671
      - RABBITMQ__MANAGEMENT_SSL=true
      - RABBITMQ__USE_SSL=true
      - RABBITMQ__USERNAME=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ__PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ__SSL_CA=/opt/opencti/ssl/ca.crt
      #- RABBITMQ__SSL_CERT=/opt/opencti/ssl/opencti.crt
      #- RABBITMQ__SSL_KEY=/opt/opencti/ssl/opencti.key
      - RABBITMQ__SSL_REJECT_UNAUTHORIZED=false
      - SMTP__HOSTNAME=${SMTP_HOSTNAME:-localhost}
      - SMTP__PORT=25
      - PROVIDERS__LOCAL__STRATEGY=LocalStrategy
    volumes:
      - /home/opencti-admin/OpenCTI_SSL_STACK/ssl/opencti:/opt/opencti/ssl:ro
      - /home/opencti-admin/OpenCTI_SSL_STACK/ssl/ca:/opt/opencti/ssl-ca:ro
 #   depends_on:
 #     redis:
 #       condition: service_healthy
    #  elasticsearch:
     #   condition: service_healthy
   #   minio:
  #      condition: service_healthy
     # rabbitmq:
    #    condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-check-certificate", "-qO-", "https://opencti:8080/health?health_access_key=${OPENCTI_HEALTHCHECK_ACCESS_KEY:-ChangeMe-HealthCheck-Key}"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - opencti

  worker:
    image: opencti/worker:6.7.17
    restart: always
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_URL}
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - WORKER_LOG_LEVEL=info
      - OPENCTI_SSL_VERIFY=false
    volumes:
      - ./ssl:/opt/opencti-worker/ssl:ro
#    depends_on:
#      opencti:
#        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 3
    networks:
      - opencti

  connector-export-file-stix:
    image: opencti/connector-export-file-stix:6.7.17
    restart: always
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_URL}
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_FILE_STIX_ID}
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileStix2
      - CONNECTOR_SCOPE=application/json
      - CONNECTOR_LOG_LEVEL=info
      - OPENCTI_SSL_VERIFY=false
#    depends_on:
#      opencti:
#        condition: service_healthy
    networks:
      - opencti

  connector-export-file-csv:
    image: opencti/connector-export-file-csv:6.7.17
    restart: always
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_URL}
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_FILE_CSV_ID}
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileCsv
      - CONNECTOR_SCOPE=text/csv
      - CONNECTOR_LOG_LEVEL=info
      - OPENCTI_SSL_VERIFY=false
#    depends_on:
#      opencti:
#        condition: service_healthy
    networks:
      - opencti

  connector-export-file-txt:
    image: opencti/connector-export-file-txt:6.7.17
    restart: always
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_URL}
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_FILE_TXT_ID}
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileTxt
      - CONNECTOR_SCOPE=text/plain
      - CONNECTOR_LOG_LEVEL=info
      - OPENCTI_SSL_VERIFY=false
#    depends_on:
#      opencti:
#        condition: service_healthy
    networks:
      - opencti

  connector-import-file-stix:
    image: opencti/connector-import-file-stix:6.7.17
    restart: always
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_URL}
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_IMPORT_FILE_STIX_ID}
      - CONNECTOR_TYPE=INTERNAL_IMPORT_FILE
      - CONNECTOR_NAME=ImportFileStix
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=true
      - CONNECTOR_SCOPE=application/json,text/xml
      - CONNECTOR_AUTO=true
      - CONNECTOR_LOG_LEVEL=info
      - OPENCTI_SSL_VERIFY=false
#    depends_on:
#      opencti:
#        condition: service_healthy
    networks:
      - opencti

  connector-import-document:
    image: opencti/connector-import-document:6.7.17
    restart: always
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_URL}
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_IMPORT_DOCUMENT_ID}
      - CONNECTOR_TYPE=INTERNAL_IMPORT_FILE
      - CONNECTOR_NAME=ImportDocument
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=true
      - CONNECTOR_SCOPE=application/pdf,text/plain,text/html
      - CONNECTOR_AUTO=true
      - CONNECTOR_ONLY_CONTEXTUAL=false
      - CONNECTOR_LOG_LEVEL=info
      - IMPORT_DOCUMENT_CREATE_INDICATOR=true
      - OPENCTI_SSL_VERIFY=false
#    depends_on:
#      opencti:
#        condition: service_healthy
    networks:
      - opencti

  connector-analysis:
    image: opencti/connector-import-document:6.7.17
    restart: always
    environment:
      - OPENCTI_URL=${OPENCTI_BASE_URL}
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_ANALYSIS_ID}
      - CONNECTOR_TYPE=INTERNAL_ANALYSIS
      - CONNECTOR_NAME=ImportDocumentAnalysis
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=false
      - CONNECTOR_SCOPE=application/pdf,text/plain,text/html
      - CONNECTOR_AUTO=true
      - CONNECTOR_ONLY_CONTEXTUAL=false
      - CONNECTOR_LOG_LEVEL=info
      - OPENCTI_SSL_VERIFY=false
#    depends_on:
#      opencti:
#        condition: service_healthy
    networks:
      - opencti

volumes:
  esdata:
  s3data:
  redisdata:
  amqpdata:

networks:
  opencti:
    driver: bridge
